# ===================================================================
# DOCKER COMPOSE UNTUK APLIKASI TOKO BERAS - PRODUCTION
# ===================================================================
#
# File ini mendefinisikan konfigurasi deployment production untuk
# aplikasi Toko Beras menggunakan Docker Compose
#
# Fitur yang dikonfigurasi:
# - Single service container dengan semua dependencies
# - Persistent volumes untuk data dan storage
# - Health check monitoring
# - Network isolation
# - Environment variables untuk production
#
# Cara penggunaan:
# docker-compose -f docker-compose.production.yml up -d
# ===================================================================

version: '3.8'

# ===================================================================
# SERVICES DEFINITION
# ===================================================================
services:
  # ===================================================================
  # APLIKASI TOKO BERAS
  # ===================================================================
  toko-beras:
    build: .
    container_name: toko-beras-app
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      # Laravel Configuration
      - APP_NAME="Toko Beras"
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://localhost:8080
      - APP_KEY=${APP_KEY:-base64:your-app-key-here}
      
      # Logging
      - LOG_CHANNEL=stack
      - LOG_DEPRECATIONS_CHANNEL=null
      - LOG_LEVEL=debug
      
      # Database Configuration
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=toko_beras
      - DB_USERNAME=toko_beras_user
      - DB_PASSWORD=toko_beras_password
      
      # Cache and Session
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - SESSION_LIFETIME=120
      - QUEUE_CONNECTION=redis
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      
      # Mail Configuration
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailpit
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null
      - MAIL_FROM_ADDRESS="noreply@tokoberas.com"
      - MAIL_FROM_NAME="${APP_NAME}"
      
      # File System
      - FILESYSTEM_DISK=local
      
      # Broadcasting
      - BROADCAST_DRIVER=log
      
      # Vite Configuration
      - VITE_APP_NAME="${APP_NAME}"
    volumes:
      - toko_beras_storage:/var/www/storage
      - toko_beras_cache:/var/www/bootstrap/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - toko_beras_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # ===================================================================
  # DATABASE SERVICES
    # ===================================================================
  postgres:
    image: postgres:15-alpine
    container_name: toko-beras-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: toko_beras
      POSTGRES_USER: toko_beras_user
      POSTGRES_PASSWORD: toko_beras_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - toko_beras_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U toko_beras_user -d toko_beras"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: toko-beras-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - toko_beras_network
    command: redis-server --appendonly yes

  # Mailpit for email testing (optional)
  mailpit:
    image: axllent/mailpit:latest
    container_name: toko-beras-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - toko_beras_network

# ===================================================================
# VOLUMES DEFINITION
# ===================================================================
# Definisi persistent volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  toko_beras_storage:
    driver: local
  toko_beras_cache:
    driver: local

# ===================================================================
# NETWORKS DEFINITION
# ===================================================================
# Definisi custom network
networks:
  # Network untuk isolasi aplikasi
  toko_beras_network:
    driver: bridge
