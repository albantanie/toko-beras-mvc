# ===================================================================
# KONFIGURASI NGINX UNTUK APLIKASI TOKO BERAS
# ===================================================================
#
# File ini mengkonfigurasi Nginx sebagai web server untuk melayani
# aplikasi Laravel Toko Beras dengan optimasi performance dan security
#
# Fitur yang dikonfigurasi:
# - Virtual host untuk aplikasi Laravel
# - Security headers untuk proteksi XSS, clickjacking, dll
# - Static asset caching untuk performance
# - PHP-FPM integration untuk menjalankan PHP
# - Health check endpoint untuk monitoring
# ===================================================================

server {
    # Listen pada port 80 (HTTP)
    # Port ini akan di-expose oleh Docker container
    listen 80;

    # Server name - bisa diganti sesuai domain production
    server_name localhost;

    # Document root mengarah ke folder public Laravel
    # Semua request HTTP akan dilayani dari direktori ini
    root /var/www/html/public;

    # File index yang akan dicari secara berurutan
    index index.php index.html;

    # ===================================================================
    # SECURITY HEADERS
    # ===================================================================
    # Header-header ini melindungi aplikasi dari berbagai serangan web

    # Mencegah clickjacking attack
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Mengaktifkan XSS protection di browser
    add_header X-XSS-Protection "1; mode=block" always;

    # Mencegah MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Mengontrol informasi referrer yang dikirim
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Content Security Policy untuk mencegah XSS dan injection attacks
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # ===================================================================
    # ROUTING CONFIGURATION
    # ===================================================================

    # Handle semua request Laravel (front controller pattern)
    # Jika file tidak ditemukan, forward ke index.php dengan query string
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ===================================================================
    # PHP-FPM INTEGRATION
    # ===================================================================

    # Handle semua file PHP melalui PHP-FPM
    location ~ \.php$ {
        # Forward request ke PHP-FPM yang berjalan di port 9000
        fastcgi_pass 127.0.0.1:9000;

        # Set script filename dengan path yang benar
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;

        # Include parameter FastCGI standar
        include fastcgi_params;

        # Sembunyikan header X-Powered-By untuk security
        fastcgi_hide_header X-Powered-By;
    }

    # ===================================================================
    # STATIC ASSETS OPTIMIZATION
    # ===================================================================

    # Cache static assets (CSS, JS, images, fonts) untuk performance
    # Cache selama 1 tahun karena Laravel menggunakan versioning untuk assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;                                    # Cache selama 1 tahun
        add_header Cache-Control "public, immutable";  # Immutable cache
        try_files $uri =404;                          # Return 404 jika file tidak ada
    }

    # ===================================================================
    # SECURITY RESTRICTIONS
    # ===================================================================

    # Blokir akses ke hidden files (dimulai dengan titik)
    # Mencegah akses ke .env, .git, dll
    location ~ /\. {
        deny all;
    }

    # Blokir akses ke file-file sensitif aplikasi
    # Mencegah download file konfigurasi dan source code
    location ~ /(?:\.env|\.git|composer\.(json|lock)|package\.(json|lock)|yarn\.lock|webpack\.mix\.js|artisan) {
        deny all;
    }

    # ===================================================================
    # MONITORING DAN HEALTH CHECK
    # ===================================================================

    # Endpoint health check untuk monitoring container
    # Digunakan oleh Docker health check dan load balancer
    location /health {
        access_log off;                    # Tidak log health check requests
        return 200 "healthy\n";           # Return status healthy
        add_header Content-Type text/plain;
    }

    # ===================================================================
    # ERROR HANDLING
    # ===================================================================

    # Redirect 404 errors ke Laravel untuk handling yang proper
    error_page 404 /index.php;

    # Custom error page untuk server errors
    error_page 500 502 503 504 /50x.html;

    # Location untuk error page
    location = /50x.html {
        root /var/www/html/public;
    }
}
